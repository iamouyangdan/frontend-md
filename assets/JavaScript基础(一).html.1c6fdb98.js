import { _ as _export_sfc, r as resolveComponent, o as openBlock, c as createElementBlock, a as createBaseVNode, b as createVNode, F as Fragment, e as createStaticVNode, d as createTextVNode } from "./app.050d295a.js";
var _imports_0 = "/frontend-md/images/auto/JavaScript\u57FA\u7840(\u4E00)/image1.png";
var _imports_1 = "/frontend-md/images/auto/JavaScript\u57FA\u7840(\u4E00)/image2.png";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="javascript\u57FA\u7840-\u4E00" tabindex="-1"><a class="header-anchor" href="#javascript\u57FA\u7840-\u4E00" aria-hidden="true">#</a> JavaScript\u57FA\u7840(\u4E00)</h1><h2 id="\u524D\u8A00" tabindex="-1"><a class="header-anchor" href="#\u524D\u8A00" aria-hidden="true">#</a> \u524D\u8A00</h2><p>\u57FA\u7840\u5F88\u91CD\u8981\uFF0C\u53EA\u6709\u57FA\u7840\u597D\u624D\u4F1A\u5F88\u5C11\u51FA<code>bug</code>\uFF0C\u5927\u591A\u6570\u7684<code>bug</code>\u90FD\u662F\u57FA\u7840\u4E0D\u624E\u5B9E\u9020\u6210\u7684\u3002</p><h2 id="\u4E00\u3001\u6570\u636E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u4E00\u3001\u6570\u636E\u7C7B\u578B" aria-hidden="true">#</a> \u4E00\u3001\u6570\u636E\u7C7B\u578B</h2><p><strong>\u503C\u7C7B\u578B(\u57FA\u672C\u7C7B\u578B)</strong>\uFF1A\u5B57\u7B26\u4E32\uFF08String\uFF09\u3001\u6570\u5B57(Number)\u3001\u5E03\u5C14(Boolean)\u3001\u5BF9\u7A7A\uFF08Null\uFF09\u3001\u672A\u5B9A\u4E49\uFF08Undefined\uFF09\u3001Symbol\u3001BigInt\u3002</p><blockquote><p><strong>\u6CE8\uFF1A</strong></p><p><code>Symbol</code> \u662F ES6 \u5F15\u5165\u4E86\u4E00\u79CD\u65B0\u7684\u539F\u59CB\u6570\u636E\u7C7B\u578B\uFF0C\u8868\u793A\u72EC\u4E00\u65E0\u4E8C\u7684\u503C\u3002</p><p><code>BigInt</code> \u662F\u4E00\u79CD\u5185\u7F6E\u5BF9\u8C61\uFF0C\u5B83\u63D0\u4F9B\u4E86\u4E00\u79CD\u65B9\u6CD5\u6765\u8868\u793A\u5927\u4E8E <code>2^53 - 1</code> \u7684\u6574\u6570\u3002\u8FD9\u539F\u672C\u662F Javascript\u4E2D\u53EF\u4EE5\u7528 <code>Number</code> \u8868\u793A\u7684\u6700\u5927\u6570\u5B57\u3002</p></blockquote><p><strong>\u5F15\u7528\u6570\u636E\u7C7B\u578B</strong>\uFF1A</p><ul><li><p>\u6807\u51C6\u666E\u901A\u5BF9\u8C61\uFF1A<code>object</code></p></li><li><p>\u6807\u51C6\u7279\u6B8A\u5BF9\u8C61\uFF1A<code>Array</code>\u3001<code>RegExp</code>\u3001<code>Date</code>\u3001<code>Math</code>\u3001<code>Error</code>\u2026\u2026</p></li><li><p>\u975E\u6807\u51C6\u7279\u6B8A\u5BF9\u8C61\uFF1A<code>Number</code>\u3001<code>String</code>\u3001<code>Boolean</code>\u2026\u2026</p></li><li><p>\u53EF\u8C03\u7528/\u6267\u884C\u5BF9\u8C61\u300C\u51FD\u6570\u300D\uFF1A<code>function</code></p></li></ul><p>JavaScript\u662F\u4E00\u95E8\u5F31\u7C7B\u578B\u8BED\u8A00\u3002\u5373<strong>\u53D8\u91CF\u5F53\u524D\u7684\u7C7B\u578B\u7531\u5176\u503C\u6240\u51B3\u5B9A\uFF0C\u53D8\u91CF</strong>\u4E0A\u4E00\u79D2\u949F\u662F<code>String</code>\uFF0C\u4E0B\u4E00\u79D2\u53EF\u80FD\u5C31\u662F\u4E2A<code>Number</code>\u7C7B\u578B\u4E86\u3002\u8FD9\u4E2A\u8FC7\u7A0B\u53EF\u80FD\u5C31\u8FDB\u884C\u4E86\u67D0\u4E9B\u64CD\u4F5C\uFF0C\u53D8\u91CF\u53D1\u751F\u4E86<strong>\u5F3A\u5236\u7C7B\u578B\u8F6C\u6362</strong>\u3002</p><h2 id="\u6570\u636E\u7C7B\u578B\u5224\u65AD" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u7C7B\u578B\u5224\u65AD" aria-hidden="true">#</a> \u6570\u636E\u7C7B\u578B\u5224\u65AD</h2><h3 id="typeof" tabindex="-1"><a class="header-anchor" href="#typeof" aria-hidden="true">#</a> typeof</h3><p><img src="' + _imports_0 + '" alt=""></p><h3 id="instanceof" tabindex="-1"><a class="header-anchor" href="#instanceof" aria-hidden="true">#</a> instanceof</h3><blockquote><p><code>instanceof</code> <strong>\u8FD0\u7B97\u7B26</strong>\u7528\u4E8E\u68C0\u6D4B\u6784\u9020\u51FD\u6570\u7684 <code>prototype</code> \u5C5E\u6027\u662F\u5426\u51FA\u73B0\u5728\u67D0\u4E2A\u5B9E\u4F8B\u5BF9\u8C61\u7684\u539F\u578B\u94FE\u4E0A\u3002\u8BED\u6CD5\uFF1A</p></blockquote><blockquote><p>object instanceof constructor</p></blockquote><blockquote><p><code>object</code>\uFF1A\u67D0\u4E2A\u5B9E\u4F8B\u5BF9\u8C61 <code>constructor</code>\uFF1A\u67D0\u4E2A\u6784\u9020\u51FD\u6570</p></blockquote><blockquote><p>\u7528\u6765\u68C0\u6D4B <code>constructor.prototype </code>\u662F\u5426\u5B58\u5728\u4E8E\u53C2\u6570 <code>object</code> \u7684\u539F\u578B\u94FE\u4E0A\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">123</span> <span class="token keyword">instanceof</span> <span class="token class-name">Number</span><span class="token punctuation">,</span> <span class="token comment">//false</span>\n<span class="token string">&#39;dsfsf&#39;</span> <span class="token keyword">instanceof</span> <span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token comment">//false</span>\n<span class="token boolean">false</span> <span class="token keyword">instanceof</span> <span class="token class-name">Boolean</span><span class="token punctuation">,</span> <span class="token comment">//false</span>\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">,</span> <span class="token comment">//true</span>\n<span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token literal-property property">c</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">}</span> <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token comment">//true</span>\n<span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">instanceof</span> <span class="token class-name">Function</span><span class="token punctuation">,</span> <span class="token comment">//true</span>\n<span class="token keyword">undefined</span> <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token comment">//false</span>\n<span class="token keyword">null</span> <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token comment">//false</span>\n<span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">Date</span><span class="token punctuation">,</span> <span class="token comment">//true</span>\n<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span><span class="token constant">Z</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">}</span>$<span class="token operator">/</span> <span class="token keyword">instanceof</span> <span class="token class-name">RegExp</span><span class="token punctuation">,</span> <span class="token comment">//true</span>\n<span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">Error</span> <span class="token comment">//true</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><ul><li><code>constructor</code> \u662F <code>prototype</code> \u5BF9\u8C61\u4E0A\u7684\u5C5E\u6027\uFF0C\u6307\u5411\u6784\u9020\u51FD\u6570</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> num  <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> str  <span class="token operator">=</span> <span class="token string">&#39;abcdef&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> bool <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> arr  <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> json <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;wenzi&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">25</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> <span class="token function-variable function">func</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;this is function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n<span class="token keyword">var</span> und  <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> nul  <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> reg  <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]{5,20}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> error<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token keyword">var</span> tom <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// undefined\u548Cnull\u6CA1\u6709constructor\u5C5E\u6027</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>\n    tom<span class="token punctuation">.</span>constructor<span class="token operator">==</span>Person<span class="token punctuation">,</span>\n    num<span class="token punctuation">.</span>constructor<span class="token operator">==</span>Number<span class="token punctuation">,</span>\n    str<span class="token punctuation">.</span>constructor<span class="token operator">==</span>String<span class="token punctuation">,</span>\n    bool<span class="token punctuation">.</span>constructor<span class="token operator">==</span>Boolean<span class="token punctuation">,</span>\n    arr<span class="token punctuation">.</span>constructor<span class="token operator">==</span>Array<span class="token punctuation">,</span>\n    json<span class="token punctuation">.</span>constructor<span class="token operator">==</span>Object<span class="token punctuation">,</span>\n    func<span class="token punctuation">.</span>constructor<span class="token operator">==</span>Function<span class="token punctuation">,</span>\n    date<span class="token punctuation">.</span>constructor<span class="token operator">==</span>Date<span class="token punctuation">,</span>\n    reg<span class="token punctuation">.</span>constructor<span class="token operator">==</span>RegExp<span class="token punctuation">,</span>\n    error<span class="token punctuation">.</span>constructor<span class="token operator">==</span>Error\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//\u6240\u6709\u7ED3\u679C\u5747\u4E3Atrue</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h3 id="tostring" tabindex="-1"><a class="header-anchor" href="#tostring" aria-hidden="true">#</a> toString</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Vue \u6E90\u7801\u7684\u68C0\u6D4B\u65B9\u6CD5</span>\n<span class="token keyword">let</span> _toString <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">toRawType</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// \u83B7\u53D6 \u4ECE\u7B2C\u4E5D\u4E2A\u5230\u5012\u6570\u7B2C\u4E8C\u4E2A\u5B57\u7B26</span>\n    <span class="token comment">// \u6BD4\u5982 [object string]  \u83B7\u53D6 string</span>\n    <span class="token keyword">return</span> <span class="token function">_toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// \u4E25\u683C\u7684\u5BF9\u8C61\u7C7B\u578B\u68C0\u67E5\uFF0C\u53EA\u8FD4\u56DEtrue</span>\n<span class="token keyword">function</span> <span class="token function">isPlainObject</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n	<span class="token keyword">return</span> <span class="token function">_toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;[object Object]&#39;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="\u7C7B\u578B\u8F6C\u6362\u7684\u89C4\u5219" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u8F6C\u6362\u7684\u89C4\u5219" aria-hidden="true">#</a> \u7C7B\u578B\u8F6C\u6362\u7684\u89C4\u5219</h2><p>\u95EE\u98981\uFF1A\u5982\u4F55\u8BA9if(a == 1 &amp;&amp; a == 2)\u6761\u4EF6\u6210\u7ACB\uFF1F</p><p>\u7B54\u6848\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">valueOf</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> a <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u95EE\u98982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token boolean">true</span> <span class="token operator">+</span> <span class="token number">21.2</span> <span class="token operator">+</span> <span class="token keyword">null</span> <span class="token operator">+</span> <span class="token keyword">undefined</span> <span class="token operator">+</span> <span class="token string">&quot;Tencent&quot;</span> <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token keyword">null</span> <span class="token operator">+</span> <span class="token number">9</span> <span class="token operator">+</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n<span class="token comment">// result\u5E94\u8BE5\u662F\uFF1F</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>\u5224\u7A7A</strong></p><blockquote><p><code>javaScript</code> \u4E94\u79CD\u865A\u503C\uFF0C\u5206\u522B\u4E3A <code>undefined\uFF0Cnull\uFF0Cfalse\uFF0C&quot;&quot;\uFF0C0\uFF0CNaN</code></p></blockquote><blockquote><p><code>Javascript</code> \u7684\u8BBE\u8BA1\u662F <strong>null\u662F\u4E00\u4E2A\u8868\u793A&quot;\u65E0&quot;\u7684\u5BF9\u8C61\uFF0C\u8F6C\u4E3A\u6570\u503C\u65F6\u4E3A0\uFF1Bundefined\u662F\u4E00\u4E2A\u8868\u793A&quot;\u65E0&quot;\u7684\u539F\u59CB\u503C\uFF0C\u8F6C\u4E3A\u6570\u503C\u65F6\u4E3ANaN\u3002</strong></p></blockquote><h3 id="\u663E\u5F0F\u7C7B\u578B\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#\u663E\u5F0F\u7C7B\u578B\u8F6C\u6362" aria-hidden="true">#</a> \u663E\u5F0F\u7C7B\u578B\u8F6C\u6362</h3><p>\u2600\uFE0F<strong>\u663E\u5F0F\u7C7B\u578B\u5F3A\u5236\u8F6C\u6362</strong>\u662F\u6307\u5F53\u5F00\u53D1\u4EBA\u5458\u901A\u8FC7\u7F16\u5199\u9002\u5F53\u7684\u4EE3\u7801\u7528\u4E8E\u5728\u7C7B\u578B\u4E4B\u95F4\u8FDB\u884C\u8F6C\u6362\uFF0C\u6BD4\u5982\uFF1A<code>Number(value)\u3001String(value)\u3001Boolean(value)</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6570\u503C\uFF1A\u8F6C\u6362\u540E\u8FD8\u662F\u539F\u6765\u7684\u503C</span>\n<span class="token function">Number</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span> <span class="token comment">// 123</span>\n\n<span class="token comment">// \u5B57\u7B26\u4E32\uFF1A\u5982\u679C\u53EF\u4EE5\u88AB\u89E3\u6790\u4E3A\u6570\u503C\uFF0C\u5219\u8F6C\u6362\u4E3A\u76F8\u5E94\u7684\u6570\u503C</span>\n<span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">&#39;123&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 123</span>\n\n<span class="token comment">// \u5B57\u7B26\u4E32\uFF1A\u5982\u679C\u4E0D\u53EF\u4EE5\u88AB\u89E3\u6790\u4E3A\u6570\u503C\uFF0C\u8FD4\u56DE NaN</span>\n<span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">&#39;123abc&#39;</span><span class="token punctuation">)</span> <span class="token comment">// NaN</span>\n\n<span class="token comment">// \u7A7A\u5B57\u7B26\u4E32\u8F6C\u4E3A0</span>\n<span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 0</span>\n\n<span class="token comment">// \u5E03\u5C14\u503C\uFF1Atrue \u8F6C\u6210 1\uFF0Cfalse \u8F6C\u6210 0</span>\n<span class="token function">Number</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">// 1</span>\n<span class="token function">Number</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token comment">// 0</span>\n\n<span class="token comment">// undefined\uFF1A\u8F6C\u6210 NaN</span>\n<span class="token function">Number</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token comment">// NaN</span>\n\n<span class="token comment">// null\uFF1A\u8F6C\u62100</span>\n<span class="token function">Number</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// 0</span>\n\n<span class="token function">Number</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">a</span> <span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token function">Number</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">]</span><span class="token punctuation">)</span> \n<span class="token function">Number</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">5</span> <span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">String</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span> <span class="token comment">// &quot;123&quot;</span>\n<span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &quot;abc&quot;</span>\n<span class="token function">String</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">// &quot;true&quot;</span>\n<span class="token function">String</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token comment">// &quot;undefined&quot;</span>\n<span class="token function">String</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// &quot;null&quot;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// boolean\u7C7B\u578B\u4EC55\u79CD\u865A\u503C\u8F6C\u6362\u4E3Afalse\uFF0C\u5176\u4ED6\u8F6C\u6362\u90FD\u4E3Atrue</span>\n<span class="token function">Boolean</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n<span class="token function">Boolean</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n<span class="token function">Boolean</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n<span class="token function">Boolean</span><span class="token punctuation">(</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><blockquote><p>5\u79CD\u865A\u503C\u6709\uFF1A<code>undefined \u3001null \u3001+-0 \u3001NaN\u3001false\u3001&#39;&#39; </code></p></blockquote><h3 id="\u9690\u5F0F\u7C7B\u578B\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#\u9690\u5F0F\u7C7B\u578B\u8F6C\u6362" aria-hidden="true">#</a> \u9690\u5F0F\u7C7B\u578B\u8F6C\u6362</h3><p>\u{1F31B}<strong>\u9690\u5F0F\u7C7B\u578B\u8F6C\u6362</strong>\u662F\u6307\u5728\u5BF9\u4E0D\u540C\u7C7B\u578B\u7684\u503C\u4F7F\u7528\u8FD0\u7B97\u7B26\u65F6\uFF0C\u503C\u53EF\u4EE5\u5728\u7C7B\u578B\u4E4B\u95F4\u81EA\u52A8\u7684\u8F6C\u6362\uFF0C\u6BD4\u5982 <code>1 == null</code>\u3002</p><p>\u6211\u4EEC\u9700\u8981\u77E5\u9053\u7684\u662F\uFF1A<strong>\u5728 JS \u4E2D\u53EA\u6709 3 \u79CD\u7C7B\u578B\u7684\u8F6C\u6362</strong></p><ul><li><p>\u8F6C\u5316\u4E3A Number \u7C7B\u578B\uFF1A<code>Number()</code> / <code>parseFloat()</code> / <code>parseInt()</code></p></li><li><p>\u8F6C\u5316\u4E3A String \u7C7B\u578B\uFF1A<code>String()</code> / <code>toString()</code></p></li><li><p>\u8F6C\u5316\u4E3A Boolean \u7C7B\u578B: <code>Boolean()</code></p></li></ul><p>\u7C7B\u578B\u8F6C\u6362\u7684\u903B\u8F91\u65E0\u8BBA\u5728\u539F\u59CB\u7C7B\u578B\u548C\u5BF9\u8C61\u7C7B\u578B\u4E0A\uFF0C\u4ED6\u4EEC\u90FD\u53EA\u4F1A\u8F6C\u6362\u6210\u4E0A\u9762 3 \u79CD\u7C7B\u578B\u4E4B\u4E00\u3002\u6240\u4EE5\u53EA\u9700\u8981\u5F04\u6E05\u5728<strong>\u4EC0\u4E48\u573A\u666F\u4E0B</strong>\u5E94\u8BE5\u8F6C\u6210<strong>\u54EA\u79CD\u7C7B\u578B</strong>\u5C31\u53EF\u4EE5\u4E86</p><h3 id="\u8F6C\u6362\u4E3Aboolean" tabindex="-1"><a class="header-anchor" href="#\u8F6C\u6362\u4E3Aboolean" aria-hidden="true">#</a> \u8F6C\u6362\u4E3Aboolean</h3><p>\u2600\uFE0F<code>\u663E\u5F0F</code>\uFF1A<code>Boolean()</code>\u65B9\u6CD5\u53EF\u4EE5\u7528\u6765\u663E\u5F0F\u5C06\u503C\u8F6C\u6362\u6210\u5E03\u5C14\u578B\u3002\u{1F31B}<code>\u9690\u5F0F</code>\uFF1A\u9690\u5F0F\u7C7B\u578B\u8F6C\u6362\u901A\u5E38\u5728\u903B\u8F91\u5224\u65AD\u6216\u8005\u6709\u903B\u8F91\u8FD0\u7B97\u7B26\u65F6\u88AB\u89E6\u53D1\uFF08|| &amp;&amp; !\uFF09\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">Boolean</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token comment">// \u663E\u793A\u7C7B\u578B\u8F6C\u6362</span>\n<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>      <span class="token comment">// \u903B\u8F91\u5224\u65AD\u89E6\u53D1\u9690\u5F0F\u7C7B\u578B\u8F6C\u6362</span>\n<span class="token operator">!</span><span class="token operator">!</span><span class="token number">2</span>           <span class="token comment">// \u903B\u8F91\u8FD0\u7B97\u7B26\u89E6\u53D1\u9690\u5F0F\u7C7B\u578B\u8F6C\u6362</span>\n<span class="token number">2</span> <span class="token operator">||</span> <span class="token string">&#39;hello&#39;</span>  <span class="token comment">// \u903B\u8F91\u8FD0\u7B97\u7B26\u89E6\u53D1\u9690\u5F0F\u7C7B\u578B\u8F6C\u6362</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u903B\u8F91\u8FD0\u7B97\u7B26\uFF08\u6BD4\u5982 || \u548C &amp;&amp;\uFF09\u662F\u5728\u5185\u90E8\u505A\u4E86 boolean \u7C7B\u578B\u8F6C\u6362\uFF0C\u4F46\u5B9E\u9645\u4E0A\u8FD4\u56DE\u7684\u662F\u539F\u59CB\u64CD\u4F5C\u6570\u7684\u503C\uFF0C\u5373\u4F7F\u4ED6\u4EEC\u90FD\u4E0D\u662F boolean \u7C7B\u578B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8FD4\u56DE number \u7C7B\u578B 123\uFF0C\u800C\u4E0D\u662F boolean \u578B true</span>\n<span class="token comment">// &#39;hello&#39; \u548C &#39;123&#39; \u4ECD\u7136\u5728\u5185\u90E8\u4F1A\u8F6C\u6362\u6210 boolean \u578B\u6765\u8BA1\u7B97\u8868\u8FBE\u5F0F</span>\n<span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token number">123</span>  <span class="token comment">// x === 123</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>boolean \u7C7B\u578B\u8F6C\u6362\u53EA\u4F1A\u6709 true \u6216\u8005 false \u4E24\u79CD\u7ED3\u679C\u3002<strong>\u9664\u4E86\u201C0/NaN/\u7A7A\u5B57\u7B26\u4E32/null/undefined\u201D\u4E94\u4E2A\u503C\u662Ffalse\uFF0C\u5176\u4F59\u90FD\u662Ftrue</strong></p><h3 id="\u8F6C\u6362\u4E3Astring" tabindex="-1"><a class="header-anchor" href="#\u8F6C\u6362\u4E3Astring" aria-hidden="true">#</a> \u8F6C\u6362\u4E3Astring</h3><p>\u2600\uFE0F<code>\u663E\u5F0F</code>\uFF1A<code>String()</code>\u65B9\u6CD5\u53EF\u4EE5\u7528\u6765\u663E\u5F0F\u5C06\u503C\u8F6C\u4E3A\u5B57\u7B26\u4E32\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment">//&quot;1,2,3&quot;</span>\n<span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token comment">//&quot;[object Object]&quot;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u{1F31B}<code>\u9690\u5F0F</code>\uFF1A\u9690\u5F0F\u8F6C\u6362\u901A\u5E38\u5728\u6709 <code>+</code> \u8FD0\u7B97\u7B26\u5E76\u4E14\u6709\u4E00\u4E2A\u64CD\u4F5C\u6570\u662F string \u7C7B\u578B\u65F6\u88AB\u89E6\u53D1\u3002</p><p>\u201C+\u201D\u4EE3\u8868\u7684\u5B57\u7B26\u4E32\u62FC\u63A5\uFF0C\u5982\u679C\u4E0B\u9762\u7684\u60C5\u51B5\u5B58\u5728\u65F6\u4F1A\u89E6\u53D1\u8F6C\u6362</p><ol><li><p>\u6709\u4E24\u8FB9\uFF0C\u4E00\u8FB9\u662F\u5B57\u7B26\u4E32\uFF0C\u5219\u4F1A\u53D8\u6210\u5B57\u7B26\u4E32\u62FC\u63A5\uFF1B</p></li><li><p>\u6709\u4E24\u8FB9\uFF0C\u4E00\u8FB9\u662F\u5BF9\u8C61</p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">1</span> <span class="token operator">+</span> <span class="token string">&#39;123&#39;</span>  <span class="token comment">//&quot;1123&quot;</span>\n<span class="token number">1</span> <span class="token operator">+</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>     <span class="token comment">//&quot;1[object Object]&quot;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="\u8F6C\u6362\u4E3Anumber" tabindex="-1"><a class="header-anchor" href="#\u8F6C\u6362\u4E3Anumber" aria-hidden="true">#</a> \u8F6C\u6362\u4E3Anumber</h3><p>\u2600\uFE0F<code>\u663E\u5F0F</code>\uFF1A<code>Number()</code>\u65B9\u6CD5\u53EF\u4EE5\u7528\u6765\u663E\u5F0F\u5C06\u503C\u8F6C\u6362\u6210\u6570\u5B57\u7C7B\u578B\u3002</p><ul><li>\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A\u6570\u5B57\uFF1A\u7A7A\u5B57\u7B26\u4E32\u53D8\u4E3A0\uFF0C\u5982\u679C\u51FA\u73B0\u4EFB\u4F55\u4E00\u4E2A\u975E\u6709\u6548\u6570\u5B57\u5B57\u7B26\uFF0C\u7ED3\u679C\u90FD\u662FNaN</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>           <span class="token comment">//0</span>\n<span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">&quot;10px&quot;</span><span class="token punctuation">)</span>       <span class="token comment">//NaN</span>\n<span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">&quot;10&quot;</span><span class="token punctuation">)</span>         <span class="token comment">//10</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>\u5E03\u5C14\u8F6C\u6362\u4E3A\u6570\u5B57</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">Number</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>         <span class="token comment">//1</span>\n<span class="token function">Number</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>        <span class="token comment">//0</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>null\u548Cundefined\u8F6C\u6362\u6210\u6570\u5B57</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">Number</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>         <span class="token comment">//0</span>\n<span class="token function">Number</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span>    <span class="token comment">//NaN</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>Symbol\u65E0\u6CD5\u8F6C\u6362\u4E3A\u6570\u5B57\uFF0C\u4F1A\u62A5\u9519\uFF1AUncaught TypeError: Cannot convert a Symbol value to a number</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">Number</span><span class="token punctuation">(</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token comment">//Uncaught TypeError: Cannot convert a Symbol value to a number</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>BigInt\u53BB\u9664\u201Cn\u201D</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">Number</span><span class="token punctuation">(</span><span class="token number">12312412321312312n</span><span class="token punctuation">)</span>     <span class="token comment">//12312412321312312</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>\u5BF9\u8C61\u8F6C\u6362\u4E3A\u6570\u5B57\uFF0C\u4F1A\u6309\u7167\u4E0B\u9762\u7684\u6B65\u9AA4\u53BB\u6267\u884C</li></ul><ol><li><p>\u5148\u8C03\u7528\u5BF9\u8C61\u7684 <code>Symbol.toPrimitive</code> \u8FD9\u4E2A\u65B9\u6CD5\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\u8FD9\u4E2A\u65B9\u6CD5</p></li><li><p>\u518D\u8C03\u7528\u5BF9\u8C61\u7684 <code>valueOf</code> \u83B7\u53D6\u539F\u59CB\u503C\uFF0C\u5982\u679C\u83B7\u53D6\u7684\u503C\u4E0D\u662F\u539F\u59CB\u503C</p></li><li><p>\u518D\u8C03\u7528\u5BF9\u8C61\u7684 <code>toString</code> \u628A\u5176\u53D8\u4E3A\u5B57\u7B26\u4E32</p></li><li><p>\u6700\u540E\u518D\u628A\u5B57\u7B26\u4E32\u57FA\u4E8E<code>Number()</code>\u65B9\u6CD5\u8F6C\u6362\u4E3A\u6570\u5B57</p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;xxx&#39;</span>\n<span class="token punctuation">}</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// \u6570\u5B66\u8FD0\u7B97\uFF1A\u5148\u628Aobj\u9690\u5F0F\u8F6C\u6362\u4E3A\u6570\u5B57\uFF0C\u518D\u8FDB\u884C\u8FD0\u7B97</span>\n<span class="token comment">//\u8FD0\u884C\u673A\u5236</span>\nobj<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>toPrimitive<span class="token punctuation">]</span> <span class="token comment">//undifined </span>\nobj<span class="token punctuation">.</span><span class="token function">valueof</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// {name:xxx}</span>\nobj<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// [object object]</span>\n<span class="token function">Number</span> <span class="token punctuation">(</span><span class="token string">&quot;[object object]&quot;</span><span class="token punctuation">)</span> <span class="token comment">// NaN</span>\n<span class="token number">NaN</span><span class="token operator">-</span><span class="token number">10</span> <span class="token comment">// NaN </span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u{1F31B}<code>\u9690\u5F0F</code>\uFF1Anumber \u7684\u9690\u5F0F\u7C7B\u578B\u8F6C\u6362\u662F\u6BD4\u8F83\u590D\u6742\u7684\uFF0C\u56E0\u4E3A\u5B83\u53EF\u4EE5\u5728\u4E0B\u9762\u591A\u79CD\u60C5\u51B5\u4E0B\u88AB\u89E6\u53D1\u3002</p><ul><li><p>\u6BD4\u8F83\u64CD\u4F5C\uFF08&gt;, &lt;, &lt;=, &gt;=\uFF09</p></li><li><p>\u6309\u4F4D\u64CD\u4F5C\uFF08| &amp; ^ ~\uFF09</p></li><li><p>\u7B97\u6570\u64CD\u4F5C\uFF08- + * / %\uFF09\uFF0C <strong>\u6CE8\u610F</strong>\uFF1A\u5F53 + \u64CD\u4F5C\u5B58\u5728\u4EFB\u610F\u7684\u64CD\u4F5C\u6570\u662F string \u7C7B\u578B\u65F6\uFF0C\u4E0D\u4F1A\u89E6\u53D1 number \u7C7B\u578B\u7684\u9690\u5F0F\u8F6C\u6362</p></li><li><p>\u4E00\u5143 + \u64CD\u4F5C</p></li></ul><h2 id="\u64CD\u4F5C\u7B26-\u4E24\u8FB9\u7684\u9690\u5F0F\u8F6C\u6362\u89C4\u5219" tabindex="-1"><a class="header-anchor" href="#\u64CD\u4F5C\u7B26-\u4E24\u8FB9\u7684\u9690\u5F0F\u8F6C\u6362\u89C4\u5219" aria-hidden="true">#</a> \u64CD\u4F5C\u7B26==\u4E24\u8FB9\u7684\u9690\u5F0F\u8F6C\u6362\u89C4\u5219</h2><p>\u5982\u679C\u4E24\u8FB9\u6570\u636E\u7C7B\u578B\u4E0D\u540C\uFF0C\u9700\u8981\u5148\u8F6C\u4E3A\u76F8\u540C\u7C7B\u578B\uFF0C\u7136\u540E\u518D\u8FDB\u884C\u6BD4\u8F83\uFF0C\u4EE5\u4E0B\u51E0\u79CD\u60C5\u51B5\u9700\u8981\u6CE8\u610F\u4E00\u4E0B\uFF1A</p><h3 id="\u5BF9\u8C61-\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61-\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u5BF9\u8C61==\u5B57\u7B26\u4E32</h3><p>\u5C06\u5BF9\u8C61\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">&#39;1,2,3&#39;</span>              <span class="token comment">//true</span>\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>toPrimitive<span class="token punctuation">]</span>   <span class="token comment">//undefined</span>\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span>             <span class="token comment">//[1, 2, 3]</span>\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment">//&quot;1,2,3&quot;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="null-undefined" tabindex="-1"><a class="header-anchor" href="#null-undefined" aria-hidden="true">#</a> null/undefined</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">null</span><span class="token operator">==</span><span class="token keyword">undefined</span>      <span class="token comment">//true</span>\n<span class="token keyword">null</span><span class="token operator">===</span><span class="token keyword">undefined</span>     <span class="token comment">//false</span>\n<span class="token comment">//null/undefined\u548C\u5176\u4ED6\u4EFB\u4F55\u503C\u90FD\u4E0D\u76F8\u7B49</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u5BF9\u8C61-\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61-\u5BF9\u8C61" aria-hidden="true">#</a> \u5BF9\u8C61==\u5BF9\u8C61</h3><p>\u6BD4\u8F83\u7684\u662F\u5806\u5185\u5B58\u5730\u5740\uFF0C\u5730\u5740\u76F8\u540C\u5219\u76F8\u7B49</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">==</span><span class="token punctuation">{</span><span class="token punctuation">}</span>      <span class="token comment">//false   \u56E0\u4E3A\u6BD4\u8F83\u7684\u662F\u5730\u5740</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="nan" tabindex="-1"><a class="header-anchor" href="#nan" aria-hidden="true">#</a> NaN</h3><p>\u9664\u4E86\u4EE5\u4E0A\u60C5\u51B5\uFF0C\u53EA\u8981\u4E24\u8FB9\u7C7B\u578B\u4E0D\u4E00\u81F4\uFF0C\u5269\u4E0B\u7684\u90FD\u662F\u8F6C\u6362\u4E3A\u6570\u5B57\uFF0C\u7136\u540E\u518D\u8FDB\u884C\u6BD4\u8F83</p><h2 id="\u9700\u8981\u6CE8\u610F\u7684\u60C5\u51B5" tabindex="-1"><a class="header-anchor" href="#\u9700\u8981\u6CE8\u610F\u7684\u60C5\u51B5" aria-hidden="true">#</a> \u9700\u8981\u6CE8\u610F\u7684\u60C5\u51B5</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">0</span>               <span class="token comment">// true</span>\n<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">===</span> <span class="token number">0</span>               <span class="token comment">// false</span>\n\n<span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token doc-comment comment">/**\n  * \u5BF9\u4E8E\u7F16\u8BD1\u5668\u800C\u8A00\uFF0C\u4EE3\u7801\u5757\u4E0D\u4F1A\u8FD4\u56DE\u4EFB\u4F55\u7684\u503C\n  * \u63A5\u7740+[]\u5C31\u53D8\u6210\u4E86\u4E00\u4E2A\u5F3A\u5236\u8F6Cnumber\u7684\u8FC7\u7A0B\n  * []\u901A\u8FC7oPrimitive\u53D8\u6210&#39;&#39;\uFF0C\u6700\u540E&#39;&#39;\u901A\u8FC7ToNumber\u64CD\u4F5C\u8F6C\u6362\u62100\n  **/</span>\n<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="\u5BF9\u8C61\u8F6C\u539F\u59CB\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u8F6C\u539F\u59CB\u7C7B\u578B" aria-hidden="true">#</a> \u5BF9\u8C61\u8F6C\u539F\u59CB\u7C7B\u578B</h2>', 88);
const _hoisted_89 = {
  href: "https://www.baidu.com/link?url=1DE97l59T0d9BcHHZWlUk2HztuD9l71rLhr0yFwA9XrYRt6O8gvt3Eh1qiLXKI3d0zS6DWMFmZccAS6ohjoOUe-m-5RAUJMgSjWLyhyh_mVizSvayd40dlRdx9w0zV1srTqzX4fe81F5ec9eMhN9ba&wd=&eqid=88ad6d2f0007913a0000000661a59319",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_90 = /* @__PURE__ */ createTextVNode("Symbol.");
const _hoisted_91 = /* @__PURE__ */ createBaseVNode("em", null, "toPrimitive", -1);
const _hoisted_92 = /* @__PURE__ */ createTextVNode(" - JavaScript | MDN");
const _hoisted_93 = /* @__PURE__ */ createStaticVNode('<p>\u95EE\u9898\uFF1A\u4E0B\u9762\u4EE3\u7801\u5728\u63A7\u5236\u53F0\u8FD0\u884C\u7684\u6253\u5370\u7ED3\u679C\u662F\u4EC0\u4E48\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n  <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token number">4</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token string">&#39;5&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>toPrimitive<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token number">6</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u5BF9\u8C61\u8F6C\u539F\u59CB\u7C7B\u578B\uFF0C\u4F1A\u8C03\u7528\u5185\u7F6E\u7684[ToPrimitive]\u51FD\u6570</p><p>\u4F18\u5148\u7EA7\uFF1ASymbol.toPrimitive &gt; valueOf &gt; toString</p><h2 id="\u4E8C\u3001es6" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001es6" aria-hidden="true">#</a> \u4E8C\u3001ES6</h2>', 5);
const _hoisted_98 = /* @__PURE__ */ createBaseVNode("strong", null, "ES5\u4E4B\u540E\u7684JS\u8BED\u6CD5\u7EDF\u79F0ES6\uFF0C\u8BED\u6CD5\u53C2\u8003\uFF1A", -1);
const _hoisted_99 = {
  href: "https://es6.ruanyifeng.com/#README",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_100 = /* @__PURE__ */ createBaseVNode("strong", null, "https://es6.ruanyifeng.com/", -1);
const _hoisted_101 = /* @__PURE__ */ createStaticVNode('<h2 id="es6\u65B0\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#es6\u65B0\u7279\u6027" aria-hidden="true">#</a> ES6\u65B0\u7279\u6027</h2><h3 id="_1-let-const" tabindex="-1"><a class="header-anchor" href="#_1-let-const" aria-hidden="true">#</a> <strong>1. let const</strong></h3><p>let \u8868\u793A\u7533\u660E\u53D8\u91CF\u3002const \u8868\u793A\u7533\u660E\u5E38\u91CF\u3002</p><ul><li><p>\u5E38\u91CF\u5B9A\u4E49\u4E86\u5C31\u4E0D\u80FD\u6539\u4E86\u3002\u5BF9\u8C61\u9664\u5916\uFF0C\u56E0\u4E3A\u5BF9\u8C61\u6307\u5411\u7684\u5730\u5740\u6CA1\u53D8\u3002</p></li><li><p>const\u5728\u7533\u660E\u662F\u5FC5\u987B\u88AB\u8D4B\u503C\u3002</p></li><li><p>\u4E24\u8005\u90FD\u4E3A\u5757\u7EA7\u4F5C\u7528\u57DF\u3002</p></li></ul><p>\u5757\u7EA7\u4F5C\u7528\u57DF\u4E0E\u51FD\u6570\u4F5C\u7528\u57DF\u3002\u4EFB\u4F55\u4E00\u5BF9\u82B1\u62EC\u53F7\uFF08\uFF5B\u548C\uFF5D\uFF09\u4E2D\u7684\u8BED\u53E5\u96C6\u90FD\u5C5E\u4E8E\u4E00\u4E2A\u5757\uFF0C\u5728\u8FD9\u4E4B\u4E2D\u5B9A\u4E49\u7684\u6240\u6709\u53D8\u91CF\u5728\u4EE3\u7801\u5757\u5916\u90FD\u662F\u4E0D\u53EF\u89C1\u7684\uFF0C\u6211\u4EEC\u79F0\u4E4B\u4E3A\u5757\u7EA7\u4F5C\u7528\u57DF\u3002\u51FD\u6570\u4F5C\u7528\u57DF\u5C31\u597D\u7406\u89E3\u4E86\uFF0C\u5B9A\u4E49\u5728\u51FD\u6570\u4E2D\u7684\u53C2\u6570\u548C\u53D8\u91CF\u5728\u51FD\u6570\u5916\u90E8\u662F\u4E0D\u53EF\u89C1\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">1</span>\na <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">//\u62A5\u9519</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_2-\u6A21\u5757\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#_2-\u6A21\u5757\u5B57\u7B26\u4E32" aria-hidden="true">#</a> <strong>2. \u6A21\u5757\u5B57\u7B26\u4E32``</strong></h3><p>\u53EF\u4EE5\u4F7F\u7528\u53CD\u5F15\u53F7````\u6765\u8FDB\u884C\u5B57\u7B26\u62FC\u63A5\u3002${}</p><h3 id="_3-\u89E3\u6784" tabindex="-1"><a class="header-anchor" href="#_3-\u89E3\u6784" aria-hidden="true">#</a> <strong>3. \u89E3\u6784</strong></h3><p>\u53EF\u4EE5\u4F7F\u7528{}\u6765\u5BF9\u6570\u7EC4\u548C\u5BF9\u8C61\u8FDB\u884C\u89E3\u6784\u3002</p><p><img src="https://img2020.cnblogs.com/blog/2248381/202104/2248381-20210414104144879-669596972.png" alt="image"></p><p><img src="https://img2020.cnblogs.com/blog/2248381/202104/2248381-20210414104158304-1032889458.png" alt="image"></p><h3 id="_4-\u51FD\u6570\u7684\u53C2\u6570\u9ED8\u8BA4\u503C" tabindex="-1"><a class="header-anchor" href="#_4-\u51FD\u6570\u7684\u53C2\u6570\u9ED8\u8BA4\u503C" aria-hidden="true">#</a> <strong>4. \u51FD\u6570\u7684\u53C2\u6570\u9ED8\u8BA4\u503C</strong></h3><p>\u51FD\u6570\u4F20\u53C2\u53EF\u4EE5\u6709\u9ED8\u8BA4\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ES6\uFF1B</span>\n<span class="token keyword">function</span> <span class="token function">printText</span><span class="token punctuation">(</span>text <span class="token operator">=</span> <span class="token string">&#39;default&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_5-spread-rest-\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#_5-spread-rest-\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> 5. Spread / Rest \u64CD\u4F5C\u7B26<code>...</code></h3><p>Spread / Rest \u64CD\u4F5C\u7B26\u6307\u7684\u662F ...\uFF0C\u5177\u4F53\u662F Spread \u8FD8\u662F Rest \u9700\u8981\u770B\u4E0A\u4E0B\u6587\u8BED\u5883\u3002</p><ul><li>\u5F53\u88AB\u7528\u4E8E\u8FED\u4EE3\u5668\u4E2D\u65F6\uFF0C\u5B83\u662F\u4E00\u4E2A Spread \u64CD\u4F5C\u7B26\uFF1A\u8FED\u4EE3\u5668 (Iterator)\u662F\u6309\u7167\u4E00\u5B9A\u7684\u987A\u5E8F\u5BF9\u4E00\u4E2A\u6216\u591A\u4E2A\u5BB9 \u5668 \u4E2D\u7684\u5143\u7D20\u884C\u8FDB\u904D\u5386\u7684\u4E00\u79CD\u673A\u5236</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n \n<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token function">foo</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1 2 3</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>\u5F53\u88AB\u7528\u4E8E\u51FD\u6570\u4F20\u53C2\u65F6\uFF0C\u662F\u4E00\u4E2A Rest \u64CD\u4F5C\u7B26\uFF1A\u5F53\u88AB\u7528\u4E8E\u51FD\u6570\u4F20\u53C2\u65F6\uFF0C\u662F\u4E00\u4E2A Rest \u64CD\u4F5C\u7B26\uFF1A</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token function">foo</span><span class="token punctuation">(</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 3, 4, 5]</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_6-\u7BAD\u5934\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_6-\u7BAD\u5934\u51FD\u6570" aria-hidden="true">#</a> <strong>6. \u7BAD\u5934\u51FD\u6570</strong></h3><ul><li><p>\u4E0D\u9700\u8981 function \u5173\u952E\u5B57\u6765\u521B\u5EFA\u51FD\u6570</p></li><li><p>\u7701\u7565 return \u5173\u952E\u5B57</p></li><li><p>this\u59CB\u7EC8\u6307\u5411\u51FD\u6570\u7533\u660E\u65F6\u6240\u5728\u4F5C\u7528\u57DF\u4E0B\u7684this\u503C</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//es5</span>\n<span class="token keyword">var</span> <span class="token function-variable function">fun</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n<span class="token punctuation">}</span>\n<span class="token comment">//es6</span>\n<span class="token keyword">var</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_7-for-of" tabindex="-1"><a class="header-anchor" href="#_7-for-of" aria-hidden="true">#</a> <strong>7. for of</strong></h3><ul><li><p>for of\u904D\u5386\u7684\u662F\u952E\u503C\u5BF9\u4E2D\u7684\u503C</p></li><li><p>for in\u904D\u5386\u7684\u662F\u952E\u503C\u5BF9\u4E2D\u7684\u952E</p></li></ul><h3 id="_8-class\u7C7B" tabindex="-1"><a class="header-anchor" href="#_8-class\u7C7B" aria-hidden="true">#</a> <strong>8. class\u7C7B</strong></h3><p>ES6 \u4E2D\u652F\u6301 class \u8BED\u6CD5\uFF0C\u4E0D\u8FC7\uFF0CES6\u7684class\u4E0D\u662F\u65B0\u7684\u5BF9\u8C61\u7EE7\u627F\u6A21\u578B\uFF0C\u5B83\u53EA\u662F\u539F\u578B\u94FE\u7684\u8BED\u6CD5\u7CD6\u8868\u73B0\u5F62\u5F0F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;I&#39;m a student.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n \n  <span class="token function">study</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;study!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n \n  <span class="token keyword">static</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Reading Now.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n \nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> Student<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// function</span>\n<span class="token keyword">let</span> stu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;I&#39;m a student.&quot;</span>\nstu<span class="token punctuation">.</span><span class="token function">study</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;study!&quot;</span>\nstu<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Reading Now.&quot;</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="_9-\u5BFC\u5165\u5BFC\u51FA" tabindex="-1"><a class="header-anchor" href="#_9-\u5BFC\u5165\u5BFC\u51FA" aria-hidden="true">#</a> <strong>9. \u5BFC\u5165\u5BFC\u51FA</strong></h3><ul><li><p>\u5BFC\u5165improt</p></li><li><p>\u5BFC\u51FAexport default</p></li></ul><h3 id="_10-promise" tabindex="-1"><a class="header-anchor" href="#_10-promise" aria-hidden="true">#</a> <strong>10. promise</strong></h3><p>Promise \u7528\u4E8E\u66F4\u4F18\u96C5\u5730\u5904\u7406\u5F02\u6B65\u8BF7\u6C42\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>\n    <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;\u6210\u529F\u4E86\uFF01&#39;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>\n      <span class="token comment">// reject(&quot;\u5931\u8D25\u4E86\uFF0Cwuwu&quot;)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="_11-async-await" tabindex="-1"><a class="header-anchor" href="#_11-async-await" aria-hidden="true">#</a> <strong>11. async/await</strong></h3><p>\u6BD4promise\u66F4\u597D\u7684\u89E3\u51B3\u4E86\u56DE\u8C03\u5730\u72F1\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  awiat <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_12-symbol" tabindex="-1"><a class="header-anchor" href="#_12-symbol" aria-hidden="true">#</a> <strong>12. Symbol</strong></h3><p>\u65B0\u7684\u57FA\u672C\u7C7B\u578B</p><h3 id="_13-set\u96C6\u5408" tabindex="-1"><a class="header-anchor" href="#_13-set\u96C6\u5408" aria-hidden="true">#</a> <strong>13. Set\u96C6\u5408</strong></h3><p>\u5B58\u50A8\u4EFB\u4F55\u7C7B\u578B\u7684\u552F\u4E00\u503C\uFF0C\u5373\u96C6\u5408\u4E2D\u6240\u4FDD\u5B58\u7684\u5143\u7D20\u662F\u4E0D\u91CD\u590D\u7684\u3002\u7C7B\u6570\u7EC4\u7ED3\u6784\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>\n<span class="token keyword">let</span> arrNew <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>\narrNew <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u7C7B\u6570\u7EC4\u4E0D\u662F\u6570\u7EC4\uFF0C\u8981\u8F6C\u5316\u4E3A\u6570\u7EC4<code>Array.form(arrNew)</code>\u8FD9\u6837arrNew\u624D\u662F\u6570\u7EC4\u4E86</p><h2 id="\u5B9E\u9645\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u9645\u5E94\u7528" aria-hidden="true">#</a> \u5B9E\u9645\u5E94\u7528</h2><h3 id="\u4E00\u3001\u5173\u4E8E\u53D6\u503C" tabindex="-1"><a class="header-anchor" href="#\u4E00\u3001\u5173\u4E8E\u53D6\u503C" aria-hidden="true">#</a> \u4E00\u3001\u5173\u4E8E\u53D6\u503C</h3><p>\u53D6\u503C\u5728\u7A0B\u5E8F\u4E2D\u975E\u5E38\u5E38\u89C1\uFF0C\u6BD4\u5982\u4ECE\u5BF9\u8C61<code>obj</code>\u4E2D\u53D6\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">c</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">d</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">e</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> obj<span class="token punctuation">.</span>a<span class="token punctuation">;</span>\n<span class="token keyword">const</span> b <span class="token operator">=</span> obj<span class="token punctuation">.</span>b<span class="token punctuation">;</span>\n<span class="token keyword">const</span> c <span class="token operator">=</span> obj<span class="token punctuation">.</span>c<span class="token punctuation">;</span>\n<span class="token keyword">const</span> d <span class="token operator">=</span> obj<span class="token punctuation">.</span>d<span class="token punctuation">;</span>\n<span class="token keyword">const</span> e <span class="token operator">=</span> obj<span class="token punctuation">.</span>e<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u6216\u8005</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> f <span class="token operator">=</span> obj<span class="token punctuation">.</span>a <span class="token operator">+</span> obj<span class="token punctuation">.</span>d<span class="token punctuation">;</span>\n<span class="token keyword">const</span> g <span class="token operator">=</span> obj<span class="token punctuation">.</span>c <span class="token operator">+</span> obj<span class="token punctuation">.</span>e<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>\u6539\u8FDB</strong>\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>e<span class="token punctuation">}</span> <span class="token operator">=</span> obj<span class="token punctuation">;</span>\n<span class="token keyword">const</span> f <span class="token operator">=</span> a <span class="token operator">+</span> d<span class="token punctuation">;</span>\n<span class="token keyword">const</span> g <span class="token operator">=</span> c <span class="token operator">+</span> e<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u89E3\u6784\u540E\u7684\u5C5E\u6027\u540D\u4E0D\u4E00\u81F4\u65F6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span>a1<span class="token punctuation">}</span> <span class="token operator">=</span> obj<span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 1</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>\u8865\u5145</strong></p><p>ES6\u7684\u89E3\u6784\u8D4B\u503C\u867D\u7136\u597D\u7528\u3002\u4F46\u662F\u8981\u6CE8\u610F\u89E3\u6784\u7684\u5BF9\u8C61\u4E0D\u80FD\u4E3A<code>undefined</code>\u3001<code>null</code>\u3002\u5426\u5219\u4F1A\u62A5\u9519\uFF0C\u6545\u8981\u7ED9\u88AB\u89E3\u6784\u7684\u5BF9\u8C61\u4E00\u4E2A\u9ED8\u8BA4\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>e<span class="token punctuation">}</span> <span class="token operator">=</span> obj <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="\u4E8C\u3001\u5173\u4E8E\u5408\u5E76\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001\u5173\u4E8E\u5408\u5E76\u6570\u636E" aria-hidden="true">#</a> \u4E8C\u3001\u5173\u4E8E\u5408\u5E76\u6570\u636E</h3><p>\u6BD4\u5982\u5408\u5E76\u4E24\u4E2A\u6570\u7EC4\uFF0C\u5408\u5E76\u4E24\u4E2A\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> c <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//[1,2,3,1,5,6]</span>\n\n<span class="token keyword">const</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> obj2 <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> obj1<span class="token punctuation">,</span> obj2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//{a:1,b:1}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><strong>\u6539\u8FDB</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">,</span><span class="token operator">...</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//[1,2,3,5,6]</span>\n\n<span class="token keyword">const</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> obj2 <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token operator">...</span>obj1<span class="token punctuation">,</span><span class="token operator">...</span>obj2<span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">//{a:1,b:1}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="\u4E09\u3001\u5173\u4E8E\u62FC\u63A5\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u4E09\u3001\u5173\u4E8E\u62FC\u63A5\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u4E09\u3001\u5173\u4E8E\u62FC\u63A5\u5B57\u7B26\u4E32</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">&#39;\u5C0F\u660E&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> score <span class="token operator">=</span> <span class="token number">59</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span><span class="token punctuation">(</span>score <span class="token operator">&gt;</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  result <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u7684\u8003\u8BD5\u6210\u7EE9\u53CA\u683C</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span> \n<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n  result <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u7684\u8003\u8BD5\u6210\u7EE9\u4E0D\u53CA\u683C</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span> \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>\u6539\u8FDB</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">&#39;\u5C0F\u660E&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> score <span class="token operator">=</span> <span class="token number">59</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>score <span class="token operator">&gt;</span> <span class="token number">60</span><span class="token operator">?</span><span class="token string">&#39;\u7684\u8003\u8BD5\u6210\u7EE9\u53CA\u683C&#39;</span><span class="token operator">:</span><span class="token string">&#39;\u7684\u8003\u8BD5\u6210\u7EE9\u4E0D\u53CA\u683C&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u56DB\u3001\u5173\u4E8Eif\u4E2D\u5224\u65AD\u6761\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u56DB\u3001\u5173\u4E8Eif\u4E2D\u5224\u65AD\u6761\u4EF6" aria-hidden="true">#</a> \u56DB\u3001\u5173\u4E8Eif\u4E2D\u5224\u65AD\u6761\u4EF6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span><span class="token punctuation">(</span>\n    type <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span>\n    type <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">||</span>\n    type <span class="token operator">==</span> <span class="token number">3</span> <span class="token operator">||</span>\n    type <span class="token operator">==</span> <span class="token number">4</span> <span class="token operator">||</span>\n<span class="token punctuation">)</span><span class="token punctuation">{</span>\n   <span class="token comment">//...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>\u6539\u8FDB</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> condition <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">if</span><span class="token punctuation">(</span> condition<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>\n   <span class="token comment">//...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u4E94\u3001\u5173\u4E8E\u5217\u8868\u641C\u7D22" tabindex="-1"><a class="header-anchor" href="#\u4E94\u3001\u5173\u4E8E\u5217\u8868\u641C\u7D22" aria-hidden="true">#</a> \u4E94\u3001\u5173\u4E8E\u5217\u8868\u641C\u7D22</h3><p>\u5728\u9879\u76EE\u4E2D\uFF0C\u4E00\u4E9B\u6CA1\u5206\u9875\u7684\u5217\u8868\u7684\u641C\u7D22\u529F\u80FD\u7531\u524D\u7AEF\u6765\u5B9E\u73B0\uFF0C\u641C\u7D22\u4E00\u822C\u5206\u4E3A\u7CBE\u786E\u641C\u7D22\u548C\u6A21\u7CCA\u641C\u7D22\u3002\u641C\u7D22\u4E5F\u8981\u53EB\u8FC7\u6EE4\uFF0C\u4E00\u822C\u7528<code>filter</code>\u6765\u5B9E\u73B0\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> result <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span> \n  <span class="token parameter">item</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    <span class="token keyword">return</span> item <span class="token operator">===</span> <span class="token number">3</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>\u6539\u8FDB</strong></p><p><code>find</code>\u65B9\u6CD5\u4E2D\u627E\u5230\u7B26\u5408\u6761\u4EF6\u7684\u9879\uFF0C\u5C31\u4E0D\u4F1A\u7EE7\u7EED\u904D\u5386\u6570\u7EC4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> result <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> \n  <span class="token parameter">item</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    <span class="token keyword">return</span> item <span class="token operator">===</span> <span class="token number">3</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="\u516D\u3001\u5173\u4E8E\u6241\u5E73\u5316\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u516D\u3001\u5173\u4E8E\u6241\u5E73\u5316\u6570\u7EC4" aria-hidden="true">#</a> \u516D\u3001\u5173\u4E8E\u6241\u5E73\u5316\u6570\u7EC4</h3><p>\u4E00\u4E2A\u90E8\u95E8JSON\u6570\u636E\u4E2D\uFF0C\u5C5E\u6027\u540D\u662F\u90E8\u95E8id\uFF0C\u5C5E\u6027\u503C\u662F\u4E2A\u90E8\u95E8\u6210\u5458id\u6570\u7EC4\u96C6\u5408\uFF0C\u73B0\u5728\u8981\u628A\u6709\u90E8\u95E8\u7684\u6210\u5458id\u90FD\u63D0\u53D6\u5230\u4E00\u4E2A\u6570\u7EC4\u96C6\u5408\u4E2D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> deps <span class="token operator">=</span> <span class="token punctuation">{</span>\n<span class="token string-property property">&#39;\u91C7\u8D2D\u90E8&#39;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token string-property property">&#39;\u4EBA\u4E8B\u90E8&#39;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token string-property property">&#39;\u884C\u653F\u90E8&#39;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">79</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token string-property property">&#39;\u8FD0\u8F93\u90E8&#39;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">105</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">let</span> member <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">in</span> deps<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">const</span> value <span class="token operator">=</span> deps<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        member <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>member<span class="token punctuation">,</span><span class="token operator">...</span>value<span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\nmember <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>member<span class="token punctuation">)</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><strong>\u6539\u8FDB</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> deps <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token string-property property">&#39;\u91C7\u8D2D\u90E8&#39;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&#39;\u4EBA\u4E8B\u90E8&#39;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&#39;\u884C\u653F\u90E8&#39;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">79</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&#39;\u8FD0\u8F93\u90E8&#39;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">105</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">let</span> member <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>deps<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5176\u4E2D\u4F7F\u7528<code>Infinity</code>\u4F5C\u4E3A<code>flat</code>\u7684\u53C2\u6570\uFF0C\u4F7F\u5F97\u65E0\u9700\u77E5\u9053\u88AB\u6241\u5E73\u5316\u7684\u6570\u7EC4\u7684\u7EF4\u5EA6\uFF0C\u652F\u63014\u7EF4\u30015\u7EF4\u6DF1\u5EA6\u7684\u6570\u7EC4\u3002</p><p><strong>\u8865\u5145</strong></p><p><code>flat</code>\u65B9\u6CD5\u4E0D\u652F\u6301IE\u6D4F\u89C8\u5668\u3002</p><h3 id="\u4E03\u3001\u5173\u4E8E\u83B7\u53D6\u5BF9\u8C61\u5C5E\u6027\u503C\u7684\u5410\u69FD" tabindex="-1"><a class="header-anchor" href="#\u4E03\u3001\u5173\u4E8E\u83B7\u53D6\u5BF9\u8C61\u5C5E\u6027\u503C\u7684\u5410\u69FD" aria-hidden="true">#</a> \u4E03\u3001\u5173\u4E8E\u83B7\u53D6\u5BF9\u8C61\u5C5E\u6027\u503C\u7684\u5410\u69FD</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> name <span class="token operator">=</span> obj <span class="token operator">&amp;&amp;</span> obj<span class="token punctuation">.</span>name<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>\u6539\u8FDB</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> name <span class="token operator">=</span> obj<span class="token operator">?.</span>name<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="\u516B\u3001\u5173\u4E8E\u6DFB\u52A0\u5BF9\u8C61\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u516B\u3001\u5173\u4E8E\u6DFB\u52A0\u5BF9\u8C61\u5C5E\u6027" aria-hidden="true">#</a> \u516B\u3001\u5173\u4E8E\u6DFB\u52A0\u5BF9\u8C61\u5C5E\u6027</h3><p>\u5F53\u7ED9\u5BF9\u8C61\u6DFB\u52A0\u5C5E\u6027\u65F6\uFF0C\u5982\u679C\u5C5E\u6027\u540D\u662F\u52A8\u6001\u53D8\u5316\u7684\uFF0C\u8BE5\u600E\u4E48\u5904\u7406\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">topic</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\nobj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;\u8BDD\u9898\u5185\u5BB9&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>\u6539\u8FDB</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\nobj<span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">topic</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;\u8BDD\u9898\u5185\u5BB9&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u4E5D\u3001\u5173\u4E8E\u8F93\u5165\u6846\u975E\u7A7A\u7684\u5224\u65AD" tabindex="-1"><a class="header-anchor" href="#\u4E5D\u3001\u5173\u4E8E\u8F93\u5165\u6846\u975E\u7A7A\u7684\u5224\u65AD" aria-hidden="true">#</a> \u4E5D\u3001\u5173\u4E8E\u8F93\u5165\u6846\u975E\u7A7A\u7684\u5224\u65AD</h3><p>\u5728\u5904\u7406\u8F93\u5165\u6846\u76F8\u5173\u4E1A\u52A1\u65F6\uFF0C\u5F80\u5F80\u4F1A\u5224\u65AD\u8F93\u5165\u6846\u672A\u8F93\u5165\u503C\u7684\u573A\u666F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span><span class="token punctuation">(</span>value <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> value <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> value <span class="token operator">!==</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token comment">//...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u53C2\u8003\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token operator">??</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u5341\u3001\u5173\u4E8E\u5F02\u6B65\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u5341\u3001\u5173\u4E8E\u5F02\u6B65\u51FD\u6570" aria-hidden="true">#</a> \u5341\u3001\u5173\u4E8E\u5F02\u6B65\u51FD\u6570</h3><p>\u5F02\u6B65\u51FD\u6570\u5F88\u5E38\u89C1\uFF0C\u7ECF\u5E38\u662F\u7528 Promise \u6765\u5B9E\u73B0\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fn1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> <span class="token function-variable function">fn2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n   <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res1</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 1</span>\n      <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res2</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n   <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p><strong>\u6539\u8FDB</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n  <span class="token keyword">const</span> res1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> res2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 1</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 2</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>\u8865\u5145</strong></p><p>\u4F46\u662F\u8981\u505A\u5E76\u53D1\u8BF7\u6C42\u65F6\uFF0C\u8FD8\u662F\u8981\u7528\u5230<code>Promise.all()</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n   Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">fn2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// [1,2]</span>\n   <span class="token punctuation">}</span><span class="token punctuation">)</span> \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5982\u679C\u5E76\u53D1\u8BF7\u6C42\u65F6\uFF0C\u53EA\u8981\u5176\u4E2D\u4E00\u4E2A\u5F02\u6B65\u51FD\u6570\u5904\u7406\u5B8C\u6210\uFF0C\u5C31\u8FD4\u56DE\u7ED3\u679C\uFF0C\u8981\u7528\u5230<code>Promise.race()</code>\u3002</p><h2 id="\u4E09\u3001\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u4E09\u3001\u6570\u7EC4" aria-hidden="true">#</a> \u4E09\u3001\u6570\u7EC4</h2><p><img src="' + _imports_1 + '" alt=""></p><p>\u751F\u6210\u7C7B\u4F3C[1-100]\u8FD9\u6837\u7684\u7684\u6570\u7EC4\uFF1A</p><p>\u6D4B\u8BD5\u5927\u91CF\u6570\u636E\u7684\u6570\u7EC4\u65F6\u53EF\u4EE5\u8FD9\u6837\u751F\u6210\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// fill</span>\n<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>\n\n<span class="token comment">// Array.from()</span>\n<span class="token keyword">const</span> arr <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">v<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>\n\n<span class="token comment">// ... + array.keys() \u751F\u6210\u7684\u662F0-99\u7684\u6570\u7EC4</span>\n<span class="token keyword">const</span> ary <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> \n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><code>new Array(100)</code> \u4F1A\u751F\u6210\u4E00\u4E2A\u6709100\u7A7A\u4F4D\u7684\u6570\u7EC4\uFF0C\u8FD9\u4E2A\u6570\u7EC4\u662F\u4E0D\u80FD\u88AB<code>map()\uFF0CforEach(), filter(), reduce(), every() \uFF0Csome()</code>\u904D\u5386\u7684\uFF0C\u56E0\u4E3A\u7A7A\u4F4D\u4F1A\u88AB\u8DF3\u8FC7\uFF08<code>for of</code>\u4E0D\u4F1A\u8DF3\u8FC7\u7A7A\u4F4D\uFF0C\u53EF\u4EE5\u904D\u5386\uFF09\u3002 <code>[...new Array(4)]</code> \u53EF\u4EE5\u7ED9\u7A7A\u4F4D\u8BBE\u7F6E\u9ED8\u8BA4\u503C<code>undefined</code>\uFF0C\u4ECE\u800C\u4F7F\u6570\u7EC4\u53EF\u4EE5\u88AB\u4EE5\u4E0A\u65B9\u6CD5\u904D\u5386\u3002</p><h3 id="\u6570\u7EC4\u89E3\u6784\u8D4B\u503C\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u89E3\u6784\u8D4B\u503C\u5E94\u7528" aria-hidden="true">#</a> \u6570\u7EC4\u89E3\u6784\u8D4B\u503C\u5E94\u7528</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4EA4\u6362\u53D8\u91CF</span>\n<span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>b<span class="token punctuation">,</span> a<span class="token punctuation">]</span>\n<span class="token punctuation">[</span>o<span class="token punctuation">.</span>a<span class="token punctuation">,</span> o<span class="token punctuation">.</span>b<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>o<span class="token punctuation">.</span>b<span class="token punctuation">,</span> o<span class="token punctuation">.</span>a<span class="token punctuation">]</span>\n<span class="token comment">// \u751F\u6210\u5269\u4F59\u6570\u7EC4</span>\n<span class="token keyword">const</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> <span class="token operator">...</span>rest<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token string">&#39;asdf&#39;</span><span class="token punctuation">]</span> <span class="token comment">// a\uFF1A&#39;a&#39;\uFF0Crest: [&quot;s&quot;, &quot;d&quot;, &quot;f&quot;]</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u6570\u7EC4\u6D45\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u6D45\u62F7\u8D1D" aria-hidden="true">#</a> \u6570\u7EC4\u6D45\u62F7\u8D1D</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>\n<span class="token keyword">const</span> arrClone <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr<span class="token punctuation">]</span>\n<span class="token comment">// \u5BF9\u8C61\u4E5F\u53EF\u4EE5\u8FD9\u6837\u6D45\u62F7\u8D1D</span>\n<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>\n<span class="token keyword">const</span> objClone <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>obj <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u6D45\u62F7\u8D1D\u65B9\u6CD5\u6709\u5F88\u591A\u5982<code>arr.slice(0, arr.length)/Arror.from(arr)</code>\u7B49\uFF0C\u4F46\u662F\u7528\u4E86<code>...</code>\u64CD\u4F5C\u7B26\u4E4B\u540E\u5C31\u4E0D\u4F1A\u518D\u60F3\u7528\u5176\u4ED6\u7684\u4E86~</p><h3 id="\u6570\u7EC4\u5408\u5E76" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u5408\u5E76" aria-hidden="true">#</a> \u6570\u7EC4\u5408\u5E76</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>\n<span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>\n<span class="token keyword">const</span> arr3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span>\n<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr1<span class="token punctuation">,</span> <span class="token operator">...</span>arr2<span class="token punctuation">,</span> <span class="token operator">...</span>arr3<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>arr1.concat(arr2, arr3)</code>\u540C\u6837\u53EF\u4EE5\u5B9E\u73B0\u5408\u5E76\uFF0C\u4F46\u662F\u7528\u4E86<code>...</code>\u64CD\u4F5C\u7B26\u4E4B\u540E\u5C31\u4E0D\u4F1A\u518D\u60F3\u7528\u5176\u4ED6\u7684\u4E86~</p><h3 id="\u6570\u7EC4\u53BB\u91CD" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u53BB\u91CD" aria-hidden="true">#</a> \u6570\u7EC4\u53BB\u91CD</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>\n<span class="token keyword">const</span> newArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>new Set(arr)</code>\u63A5\u53D7\u4E00\u4E2A\u6570\u7EC4\u53C2\u6570\u5E76\u751F\u6210\u4E00\u4E2Aset\u7ED3\u6784\u7684\u6570\u636E\u7C7B\u578B\u3002set\u6570\u636E\u7C7B\u578B\u7684\u5143\u7D20\u4E0D\u4F1A\u91CD\u590D\u4E14\u662F<code>Array Iterator</code>\uFF0C\u6240\u4EE5\u53EF\u4EE5\u5229\u7528\u8FD9\u4E2A\u7279\u6027\u6765\u53BB\u91CD\u3002</p><h3 id="\u6570\u7EC4\u53D6\u4EA4\u96C6" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u53D6\u4EA4\u96C6" aria-hidden="true">#</a> \u6570\u7EC4\u53D6\u4EA4\u96C6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>\n<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span>\n<span class="token keyword">const</span> duplicatedValues <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>\nduplicatedValues <span class="token comment">// [3, 4, 5]</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="\u6570\u7EC4\u53D6\u5DEE\u96C6" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u53D6\u5DEE\u96C6" aria-hidden="true">#</a> \u6570\u7EC4\u53D6\u5DEE\u96C6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>\n<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span>\n<span class="token keyword">const</span> diffValues <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">,</span> <span class="token operator">...</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>b<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span>a<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [0, 1, 2, 6, 7, 8]</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u6570\u7EC4\u8F6C\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u8F6C\u5BF9\u8C61" aria-hidden="true">#</a> \u6570\u7EC4\u8F6C\u5BF9\u8C61</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>\n<span class="token keyword">const</span> newObj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token operator">...</span>arr<span class="token punctuation">}</span> <span class="token comment">// {0: 1, 1: 2, 2: 3, 3: 4}</span>\n<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">}</span>\n<span class="token comment">// \u5BF9\u8C61\u8F6C\u6570\u7EC4\u4E0D\u80FD\u7528\u5C55\u5F00\u64CD\u4F5C\u7B26\uFF0C\u56E0\u4E3A\u5C55\u5F00\u64CD\u4F5C\u7B26\u5FC5\u987B\u7528\u5728\u53EF\u8FED\u4EE3\u5BF9\u8C61\u4E0A</span>\n<span class="token keyword">let</span> newArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>obj<span class="token punctuation">]</span> <span class="token comment">// Uncaught TypeError: object is not iterable...</span>\n<span class="token comment">// \u53EF\u4EE5\u4F7F\u7528Array.form()\u5C06\u7C7B\u6570\u7EC4\u5BF9\u8C61\u8F6C\u4E3A\u6570\u7EC4</span>\n<span class="token keyword">let</span> newArr <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">// [0, 1, 2]</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="\u6570\u7EC4\u644A\u5E73" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u644A\u5E73" aria-hidden="true">#</a> \u6570\u7EC4\u644A\u5E73</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&#39;\u7FA4\u4E3B&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token string">&#39;\u7537\u7FA4\u53CB&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token string">&#39;\u5973\u88D9\u53CB&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token string">&#39;\u672A\u77E5\u6027\u522B&#39;</span><span class="token punctuation">}</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> item<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;\u7FA4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n<span class="token comment">// \u65B9\u6CD51</span>\n<span class="token keyword">const</span> flatArr <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token function">getName</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">// \u7ECF\u5927\u4F6C\u6307\u70B9\uFF0C\u66F4\u52A0\u7B80\u5316\uFF08\u53D1\u73B0\u81EA\u5DF1\u7684\u62BD\u8C61\u80FD\u529B\u771F\u7684\u5DEE~\uFF09</span>\n<span class="token keyword">const</span> flatArr <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>getName<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u4E8C\u7EF4\u6570\u7EC4\u7528<code>array.flat()</code>\uFF0C\u4E09\u7EF4\u53CA\u4EE5\u4E0A\u7528<code>array.flatMap()</code>\u3002<code>array.flat(2)</code>\u53EF\u4EE5\u4F20\u53C2\u6570\u5B57\u5982 2\uFF0C\u8868\u793A\u8981\u644A\u5E73\u7684\u5C42\u6570\u3002</p><h2 id="\u6570\u7EC4\u5E38\u7528\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u5E38\u7528\u904D\u5386" aria-hidden="true">#</a> \u6570\u7EC4\u5E38\u7528\u904D\u5386</h2><p>\u6570\u7EC4\u5E38\u7528\u904D\u5386\u6709 <code>forEach\u3001every\u3001some\u3001filter\u3001map\u3001reduce\u3001reduceRight\u3001find\u3001findIndex</code> \u7B49\u65B9\u6CD5\uFF0C\u5F88\u591A\u65B9\u6CD5\u90FD\u53EF\u4EE5\u8FBE\u5230\u540C\u6837\u7684\u6548\u679C\u3002\u6570\u7EC4\u65B9\u6CD5\u4E0D\u4EC5\u8981\u4F1A\u7528\uFF0C\u800C\u4E14\u8981\u7528\u597D\u3002\u8981\u7528\u597D\u5C31\u8981\u77E5\u9053\u4EC0\u4E48\u65F6\u5019\u7528\u4EC0\u4E48\u65B9\u6CD5\u3002</p><h3 id="\u904D\u5386\u7684\u6DF7\u5408\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u904D\u5386\u7684\u6DF7\u5408\u4F7F\u7528" aria-hidden="true">#</a> \u904D\u5386\u7684\u6DF7\u5408\u4F7F\u7528</h3><p><code>filter</code>\u3001<code>map</code>\u65B9\u6CD5\u8FD4\u56DE\u503C\u4ECD\u65E7\u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u6240\u4EE5\u53EF\u4EE5\u642D\u914D\u5176\u4ED6\u6570\u7EC4\u904D\u5386\u65B9\u6CD5\u6DF7\u5408\u4F7F\u7528\u3002\u6CE8\u610F\u904D\u5386\u8D8A\u591A\u6548\u7387\u8D8A\u4F4E~</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>\n<span class="token keyword">const</span> value <span class="token operator">=</span> arr\n    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> curr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> prev <span class="token operator">+</span> curr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="\u68C0\u6D4B\u6570\u7EC4\u6240\u6709\u5143\u7D20\u662F\u5426\u90FD\u7B26\u5408\u5224\u65AD\u6761\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u68C0\u6D4B\u6570\u7EC4\u6240\u6709\u5143\u7D20\u662F\u5426\u90FD\u7B26\u5408\u5224\u65AD\u6761\u4EF6" aria-hidden="true">#</a> \u68C0\u6D4B\u6570\u7EC4\u6240\u6709\u5143\u7D20\u662F\u5426\u90FD\u7B26\u5408\u5224\u65AD\u6761\u4EF6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>\n<span class="token keyword">const</span> isAllNum <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token keyword">typeof</span> item <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="\u68C0\u6D4B\u6570\u7EC4\u662F\u5426\u6709\u5143\u7D20\u7B26\u5408\u5224\u65AD\u6761\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u68C0\u6D4B\u6570\u7EC4\u662F\u5426\u6709\u5143\u7D20\u7B26\u5408\u5224\u65AD\u6761\u4EF6" aria-hidden="true">#</a> \u68C0\u6D4B\u6570\u7EC4\u662F\u5426\u6709\u5143\u7D20\u7B26\u5408\u5224\u65AD\u6761\u4EF6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>\n<span class="token keyword">const</span> hasNum <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token keyword">typeof</span> item <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="\u627E\u5230\u7B2C\u4E00\u4E2A\u7B26\u5408\u6761\u4EF6\u7684\u5143\u7D20-\u4E0B\u6807" tabindex="-1"><a class="header-anchor" href="#\u627E\u5230\u7B2C\u4E00\u4E2A\u7B26\u5408\u6761\u4EF6\u7684\u5143\u7D20-\u4E0B\u6807" aria-hidden="true">#</a> \u627E\u5230\u7B2C\u4E00\u4E2A\u7B26\u5408\u6761\u4EF6\u7684\u5143\u7D20/\u4E0B\u6807</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>\n<span class="token keyword">const</span> findItem <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">// \u8FD4\u56DE\u5B50\u9879</span>\n<span class="token keyword">const</span> findIndex <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">// \u8FD4\u56DE\u5B50\u9879\u7684\u4E0B\u6807</span>\n<span class="token keyword">const</span> index <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> \n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="\u6570\u7EC4\u4F7F\u7528\u8BEF\u533A" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u4F7F\u7528\u8BEF\u533A" aria-hidden="true">#</a> \u6570\u7EC4\u4F7F\u7528\u8BEF\u533A</h2><p>\u6570\u7EC4\u7684\u65B9\u6CD5\u5F88\u591A\uFF0C\u5F88\u591A\u65B9\u6CD5\u90FD\u53EF\u4EE5\u8FBE\u5230\u540C\u6837\u7684\u6548\u679C\uFF0C\u6240\u4EE5\u5728\u4F7F\u7528\u65F6\u8981\u6839\u636E\u9700\u6C42\u4F7F\u7528\u5408\u9002\u7684\u65B9\u6CD5\u3002</p><p>\u5783\u573E\u4EE3\u7801\u4EA7\u751F\u7684\u5F88\u5927\u539F\u56E0\u5C31\u662F\u6570\u7EC4\u5E38\u7528\u65B9\u6CD5\u4F7F\u7528\u4E0D\u5F53\uFF0C\u8FD9\u91CC\u6709\u4EE5\u4E0B\u9700\u8981\u6CE8\u610F\u7684\u70B9\uFF1A</p><h3 id="array-includes-\u548C-array-indexof" tabindex="-1"><a class="header-anchor" href="#array-includes-\u548C-array-indexof" aria-hidden="true">#</a> array.includes() \u548C array.indexOf()</h3><p><code>array.includes()</code> \u8FD4\u56DE\u5E03\u5C14\u503C\uFF0C<code>array.indexOf()</code> \u8FD4\u56DE\u6570\u7EC4\u5B50\u9879\u7684\u7D22\u5F15\u3002<code>indexOf</code> \u4E00\u5B9A\u8981\u5728\u9700\u8981\u7D22\u5F15\u503C\u7684\u60C5\u51B5\u4E0B\u4F7F\u7528\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>\n\n<span class="token comment">// \u4F7F\u7528indexOf\uFF0C\u9700\u8981\u7528\u5230\u7D22\u5F15\u503C</span>\n<span class="token keyword">const</span> index <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// 0</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">~</span>index<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u82E5index === -1\uFF0C~index\u5F97\u52300\uFF0C\u5224\u65AD\u4E0D\u6210\u7ACB\uFF1B\u82E5index\u4E0D\u4E3A-1\uFF0C\u5219~index\u5F97\u5230\u975E0\uFF0C\u5224\u65AD\u6210\u7ACB\u3002</span>\n    arr<span class="token punctuation">.</span><span class="token function">spilce</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// \u4F7F\u7528includes\uFF0C\u4E0D\u9700\u8981\u7528\u5230\u7D22\u5F15\u503C</span>\n<span class="token comment">// \u6B64\u65F6\u82E5\u7528indexOf\u4F1A\u9020\u6210\u4E0A\u4E0B\u6587\u4E0A\u7684\u9605\u8BFB\u8D1F\u62C5\uFF1A\u5230\u5E95\u5176\u4ED6\u5730\u65B9\u6709\u6CA1\u6709\u7528\u5230\u8FD9\u4E2Aindex?</span>\n<span class="token keyword">const</span> isExist <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isExist<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><code>array.indexOf()</code>\u627E <code>NaN</code> \u4F1A\u627E\u4E0D\u5230\uFF0C\u8FD4\u56DE<code>-1</code>\uFF0C<code>array.includes()</code>\u80FD\u627E\u5230\uFF0C\u8FD4\u56DE<code>true</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">[</span><span class="token number">NaN</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n<span class="token punctuation">[</span><span class="token number">NaN</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span> <span class="token comment">// -1</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="array-find-\u3001-array-findindex-\u548C-array-some" tabindex="-1"><a class="header-anchor" href="#array-find-\u3001-array-findindex-\u548C-array-some" aria-hidden="true">#</a> array.find() \u3001 array.findIndex() \u548C array.some()</h3><p><code>array.find()</code>\u8FD4\u56DE\u503C\u662F\u7B2C\u4E00\u4E2A\u7B26\u5408\u6761\u4EF6\u7684\u6570\u7EC4\u5B50\u9879\uFF0C<code>array.findIndex()</code> \u8FD4\u56DE\u7B2C\u4E00\u4E2A\u7B26\u5408\u6761\u4EF6\u7684\u6570\u7EC4\u5B50\u9879\u7684\u4E0B\u6807\uFF0C<code>array.some()</code> \u8FD4\u56DE\u6709\u65E0\u590D\u5408\u6761\u4EF6\u7684\u5B50\u9879\uFF0C\u5982\u6709\u8FD4\u56DE<code>true</code>\uFF0C\u82E5\u65E0\u8FD4\u56DE<code>false</code>\u3002\u6CE8\u610F\u8FD9\u4E09\u4E2A\u90FD\u662F\u77ED\u8DEF\u64CD\u4F5C\uFF0C\u5373\u627E\u5230\u7B26\u5408\u6761\u4EF6\u7684\u4E4B\u540E\u5C31\u4E0D\u5728\u7EE7\u7EED\u904D\u5386\u3002\u5728\u9700\u8981\u6570\u7EC4\u7684\u5B50\u9879\u7684\u65F6\u5019\u4F7F\u7528<code>array.find()</code> \uFF1B\u9700\u8981\u5B50\u9879\u7684\u7D22\u5F15\u503C\u7684\u65F6\u5019\u4F7F\u7528 <code>array.findIndex()</code> \uFF1B\u800C\u82E5\u53EA\u9700\u8981\u77E5\u9053\u6709\u65E0\u7B26\u5408\u6761\u4EF6\u7684\u5B50\u9879\uFF0C\u5219\u7528 <code>array.some()</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;\u7537&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;\u5973&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;\u4E0D\u7537\u4E0D\u5973&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">]</span>\n\n<span class="token comment">// \u4F7F\u7528some</span>\n<span class="token keyword">const</span> isExist <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>isExist<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u54C8\u54C8\u54C8\u627E\u5230\u4E86&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// \u4F7F\u7528find</span>\n<span class="token keyword">const</span> item <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>label<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// \u4F7F\u7528findIndex</span>\n<span class="token keyword">const</span> index <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">~</span>index<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> delItem <span class="token operator">=</span> arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span>\n    arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\u4F60\u5220\u9664\u4E86</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>delItem<span class="token punctuation">.</span>label<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u5EFA\u8BAE\u5728\u53EA\u9700\u8981\u5E03\u5C14\u503C\u7684\u65F6\u5019\u548C\u6570\u7EC4\u5B50\u9879\u662F\u5B57\u7B26\u4E32\u6216\u6570\u5B57\u7684\u65F6\u5019\u4F7F\u7528 <code>array.some()</code>\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5F53\u5B50\u5305\u542B\u6570\u5B570\u7684\u65F6\u5019\u53EF\u80FD\u51FA\u9519</span>\n<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>\n\n<span class="token comment">// \u6B63\u786E</span>\n<span class="token keyword">const</span> isExist <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>isExist<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5B58\u5728\u8981\u627E\u7684\u5B50\u9879\uFF0C\u5F88\u8212\u670D~&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// \u9519\u8BEF</span>\n<span class="token keyword">const</span> isExist <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>isExist<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// isExist\u6B64\u65F6\u662F0\uFF0C\u9690\u5F0F\u8F6C\u6362\u4E3A\u5E03\u5C14\u503C\u540E\u662Ffalse</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6267\u884C\u4E0D\u5230\u8FD9\u91CC~&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token comment">// \u5F53\u5B50\u9879\u5305\u542B\u7A7A\u5B57\u7B26\u4E32\u7684\u65F6\u5019\u4E5F\u53EF\u80FD\u51FA\u9519</span>\n<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;asdf&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;qwer&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;...&#39;</span><span class="token punctuation">]</span>\n\n<span class="token comment">// \u6B63\u786E</span>\n<span class="token keyword">const</span> isExist <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item <span class="token operator">===</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>isExist<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5B58\u5728\u8981\u627E\u7684\u5B50\u9879\uFF0C\u5F88\u8212\u670D~&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// \u9519\u8BEF</span>\n<span class="token keyword">const</span> isExist <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item <span class="token operator">===</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>isExist<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// isExist\u6B64\u65F6\u662F&#39;&#39;\uFF0C\u9690\u5F0F\u8F6C\u6362\u4E3A\u5E03\u5C14\u503C\u540E\u662Ffalse</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6267\u884C\u4E0D\u5230\u8FD9\u91CC~&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h3 id="array-find-\u548C-array-filter" tabindex="-1"><a class="header-anchor" href="#array-find-\u548C-array-filter" aria-hidden="true">#</a> array.find() \u548C array.filter()</h3><p>\u53EA\u9700\u8981\u77E5\u9053 <code>array.filter()</code> \u8FD4\u56DE\u7684\u662F\u6240\u6709\u7B26\u5408\u6761\u4EF6\u7684\u5B50\u9879\u7EC4\u6210\u7684\u6570\u7EC4\uFF0C\u4F1A\u904D\u5386\u6240\u6709\u6570\u7EC4\uFF1B\u800C <code>array.find()</code> \u53EA\u8FD4\u56DE\u7B2C\u4E00\u4E2A\u7B26\u5408\u6761\u4EF6\u7684\u5B50\u9879\uFF0C\u662F\u77ED\u8DEF\u64CD\u4F5C\u3002\u4E0D\u518D\u4E3E\u4F8B~</p><h3 id="\u5408\u7406\u4F7F\u7528-set-\u6570\u636E\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u5408\u7406\u4F7F\u7528-set-\u6570\u636E\u7ED3\u6784" aria-hidden="true">#</a> \u5408\u7406\u4F7F\u7528 Set \u6570\u636E\u7ED3\u6784</h3><p>\u7531\u4E8E es6 \u539F\u751F\u63D0\u4F9B\u4E86 <code>Set</code> \u6570\u636E\u7ED3\u6784\uFF0C\u800C <code>Set</code> \u53EF\u4EE5\u4FDD\u8BC1\u5B50\u9879\u4E0D\u91CD\u590D\uFF0C\u4E14\u548C\u6570\u7EC4\u8F6C\u6362\u5341\u5206\u65B9\u4FBF\uFF0C\u6240\u4EE5\u5728\u4E00\u4E9B\u53EF\u80FD\u4F1A\u6D89\u53CA\u91CD\u590D\u6DFB\u52A0\u7684\u573A\u666F\u4E0B\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528 <code>Set</code> \u4EE3\u66FF <code>Array</code>\uFF0C\u907F\u514D\u4E86\u591A\u4E2A\u5730\u65B9\u91CD\u590D\u5224\u65AD\u662F\u5426\u5DF2\u7ECF\u5B58\u5728\u8BE5\u5B50\u9879\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nset<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\nset<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\nset<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\nset<span class="token punctuation">.</span>size <span class="token comment">// 1</span>\n<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>set<span class="token punctuation">]</span> <span class="token comment">// arr: [1]</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="\u5F3A\u5927\u7684reduce-\u5947\u5DE7\u6DEB\u6280" tabindex="-1"><a class="header-anchor" href="#\u5F3A\u5927\u7684reduce-\u5947\u5DE7\u6DEB\u6280" aria-hidden="true">#</a> \u5F3A\u5927\u7684reduce\uFF08\u5947\u5DE7\u6DEB\u6280\uFF09</h3><p><code>array.reduce</code> \u904D\u5386\u5E76\u5C06\u5F53\u524D\u6B21\u56DE\u8C03\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u4F5C\u4E3A\u4E0B\u4E00\u6B21\u56DE\u8C03\u51FD\u6570\u6267\u884C\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u3002\u5229\u7528 <code>array.reduce</code> \u66FF\u4EE3\u4E00\u4E9B\u9700\u8981\u591A\u6B21\u904D\u5386\u7684\u573A\u666F\uFF0C\u53EF\u4EE5\u6781\u5927\u63D0\u9AD8\u4EE3\u7801\u8FD0\u884C\u6548\u7387\u3002</p><ol><li>\u5229\u7528<code>reduce</code> \u8F93\u51FA\u4E00\u4E2A\u6570\u5B57/\u5B57\u7B26\u4E32</li></ol><p>\u5047\u5982\u6709\u5982\u4E0B\u6BCF\u4E2A\u5143\u7D20\u90FD\u7531\u5B57\u6BCD&#39;s&#39;\u52A0\u6570\u5B57\u7EC4\u6210\u7684\u6570\u7EC4<code>arr</code>\uFF0C\u73B0\u5728\u627E\u51FA\u5176\u4E2D\u6700\u5927\u7684\u6570\u5B57\uFF1A\uFF08<code>arr</code>\u4E0D\u4E3A\u7A7A\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;s0&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;s4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;s1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;s2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;s8&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;s3&#39;</span><span class="token punctuation">]</span>\n\n<span class="token comment">// \u65B9\u6CD51  \u8FDB\u884C\u4E86\u591A\u6B21\u904D\u5386\uFF0C\u4F4E\u6548</span>\n<span class="token keyword">const</span> newArr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token function">Number</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> maxS <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>newArr<span class="token punctuation">)</span>\n\n<span class="token comment">// \u65B9\u6CD52  \u4E00\u6B21\u904D\u5386</span>\n<span class="token keyword">const</span> maxS <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> curIndex <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;s&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token keyword">return</span> curIndex <span class="token operator">&gt;</span> prev <span class="token operator">?</span> curIndex <span class="token operator">:</span> prev\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ol><li>\u5229\u7528<code>reduce</code> \u8F93\u51FA\u4E00\u4E2A\u6570\u7EC4/\u5BF9\u8C61</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>\n\n <span class="token comment">// \u65B9\u6CD51  \u904D\u5386\u4E86\u4E24\u6B21\uFF0C\u6548\u7387\u4F4E</span>\n<span class="token keyword">const</span> value <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> item <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n<span class="token comment">// \u65B9\u6CD51  \u4E00\u6B21\u904D\u5386\uFF0C\u6548\u7387\u9AD8</span>\n<span class="token keyword">const</span> value <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> curr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> curr <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token operator">...</span>prev<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> curr <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token operator">:</span> prev\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u638C\u63E1\u4E86\u4E0A\u9762\u4E24\u79CD\u7528\u6CD5\uFF0C\u7ED3\u5408\u5B9E\u9645\u9700\u8981\uFF0C\u5C31\u53EF\u4EE5\u7528 <code>reduce/reduceRight</code> \u5B9E\u73B0\u5404\u79CD\u5947\u5DE7\u6DEB\u6280\u4E86\u3002\u5B9E\u4F8B\uFF1A\u5229\u7528 <code>reduce</code> \u505A\u4E0B\u9762\u8FD9\u6837\u7684\u5904\u7406\u6765\u751F\u6210\u60F3\u8981\u7684 html \u5B57\u7B26\u4E32\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u540E\u7AEF\u8FD4\u56DE\u6570\u636E</span>\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token string-property property">&#39;if _ then s9&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">&#39;\u4F5C\u7528\u5C5E\u4E8E\u5404\u79CD,\u7ED3\u6784\u5C5E\u4E8E\u4F4F\u5B85,\u7ED3\u6784\u80FD\u627F\u53D7\u4F5C\u7528,\u4F5C\u7528\u5C5E\u4E8E\u5728\u6B63\u5E38\u5EFA\u9020\u548C\u6B63\u5E38\u4F7F\u7528\u8FC7\u7A0B\u4E2D\u53EF\u80FD\u53D1\u751F&#39;</span><span class="token punctuation">,</span>\n    <span class="token string">&#39;\u4F5C\u7528\u5C5E\u4E8E\u5404\u79CD,\u7ED3\u6784\u5C5E\u4E8E\u4F4F\u5B85,\u7ED3\u6784\u80FD\u627F\u53D7\u4F5C\u7528,\u4F5C\u7528\u5C5E\u4E8E\u5728\u6B63\u5E38\u5EFA\u9020\u548C\u6B63\u5E38\u4F7F\u7528\u8FC7\u7A0B\u4E2D\u53EF\u80FD\u53D1\u751F&#39;</span><span class="token punctuation">,</span>\n    <span class="token string">&#39;\u4F5C\u7528\u5C5E\u4E8E\u5404\u79CD,\u7ED3\u6784\u5C5E\u4E8E\u4F4F\u5B85,\u7ED3\u6784\u80FD\u627F\u53D7\u4F5C\u7528,\u4F5C\u7528\u5C5E\u4E8E\u5728\u6B63\u5E38\u5EFA\u9020\u548C\u6B63\u5E38\u4F7F\u7528\u8FC7\u7A0B\u4E2D\u53EF\u80FD\u53D1\u751F&#39;</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token string-property property">&#39;if C then s4&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">&#39;\u5F53\u6709\u6761\u4EF6\u65F6\u65F6,\u7ED3\u6784\u6784\u4EF6\u6EE1\u8DB3\u8981\u6C42,\u8981\u6C42\u5C5E\u4E8E\u5B89\u5168\u6027\u3001\u9002\u7528\u6027\u548C\u8010\u4E45\u6027&#39;</span><span class="token punctuation">,</span>\n    <span class="token string">&#39;\u5F53\u6709\u6761\u4EF6\u65F6\u65F6,\u4F4F\u5B85\u7ED3\u6784\u6EE1\u8DB3\u8981\u6C42,\u8981\u6C42\u5C5E\u4E8E\u5B89\u5168\u6027\u3001\u9002\u7528\u6027\u548C\u8010\u4E45\u6027&#39;</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> ifthens <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> values <span class="token operator">=</span> cur<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>prev<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;p&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>cur<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/p&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>\n  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n    </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>prev<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\n    &lt;li&gt;\n      &lt;p&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>cur<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/p&gt;\n      </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>values<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\n    &lt;/li&gt;\n  </span><span class="token template-punctuation string">`</span></span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> html <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  &lt;ul class=&quot;nlp-notify-body&quot;&gt;\n    </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>ifthens<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\n  &lt;/ul&gt;\n</span><span class="token template-punctuation string">`</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>\u751F\u6210\u7684 html \u7ED3\u6784\u5982\u4E0B\uFF1A</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nlp-notify-body<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>            \n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>if _ then s9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>\u4F5C\u7528\u5C5E\u4E8E\u5404\u79CD,\u7ED3\u6784\u5C5E\u4E8E\u4F4F\u5B85,\u7ED3\u6784\u80FD\u627F\u53D7\u4F5C\u7528,\u4F5C\u7528\u5C5E\u4E8E\u5728\u6B63\u5E38\u5EFA\u9020\u548C\u6B63\u5E38\u4F7F\u7528\u8FC7\u7A0B\u4E2D\u53EF\u80FD\u53D1\u751F<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>\u4F5C\u7528\u5C5E\u4E8E\u5404\u79CD,\u7ED3\u6784\u5C5E\u4E8E\u4F4F\u5B85,\u7ED3\u6784\u80FD\u627F\u53D7\u4F5C\u7528,\u4F5C\u7528\u5C5E\u4E8E\u5728\u6B63\u5E38\u5EFA\u9020\u548C\u6B63\u5E38\u4F7F\u7528\u8FC7\u7A0B\u4E2D\u53EF\u80FD\u53D1\u751F<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>\u4F5C\u7528\u5C5E\u4E8E\u5404\u79CD,\u7ED3\u6784\u5C5E\u4E8E\u4F4F\u5B85,\u7ED3\u6784\u80FD\u627F\u53D7\u4F5C\u7528,\u4F5C\u7528\u5C5E\u4E8E\u5728\u6B63\u5E38\u5EFA\u9020\u548C\u6B63\u5E38\u4F7F\u7528\u8FC7\u7A0B\u4E2D\u53EF\u80FD\u53D1\u751F<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>if C then s4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>\u5F53\u6709\u6761\u4EF6\u65F6\u65F6,\u7ED3\u6784\u6784\u4EF6\u6EE1\u8DB3\u8981\u6C42,\u8981\u6C42\u5C5E\u4E8E\u5B89\u5168\u6027\u3001\u9002\u7528\u6027\u548C\u8010\u4E45\u6027<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>\u5F53\u6709\u6761\u4EF6\u65F6\u65F6,\u4F4F\u5B85\u7ED3\u6784\u6EE1\u8DB3\u8981\u6C42,\u8981\u6C42\u5C5E\u4E8E\u5B89\u5168\u6027\u3001\u9002\u7528\u6027\u548C\u8010\u4E45\u6027<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u8FD9\u91CC\u8FD8\u6709\u4E00\u4E2A\u66FF\u4EE3 <code>reverse</code> \u51FD\u6570\u7684\u6280\u5DE7\u7531\u4E8E <code>array.reverse()</code> \u51FD\u6570\u4F1A\u6539\u53D8\u539F\u6570\u7EC4\u81EA\u8EAB\uFF0C\u8FD9\u6837\u5C31\u9650\u5236\u4E86\u4E00\u4E9B\u4F7F\u7528\u573A\u666F\u3002\u5982\u679C\u6211\u60F3\u8981\u4E00\u4E2A\u4E0D\u4F1A\u6539\u53D8\u6570\u7EC4\u81EA\u8EAB\u7684 <code>reverse</code> \u51FD\u6570\u5462\uFF1F\u62FF\u8D70\uFF01</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">myReverse</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span>  arr<span class="token punctuation">.</span><span class="token function">reduceRight</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token operator">...</span>prev<span class="token punctuation">,</span> cur<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// \u4E5F\u53EF\u4EE5\u8FD4\u56DE\u9017\u53F7\u8868\u8FBE\u5F0F (prev.push(cur), prev)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>', 175);
const _hoisted_276 = /* @__PURE__ */ createBaseVNode("code", null, "reduce", -1);
const _hoisted_277 = /* @__PURE__ */ createTextVNode(" \u592A\u5F3A\u5927\u4E86\uFF0C\u8FD9\u91CC\u53EA\u80FD\u5C55\u793A\u57FA\u672C\u7528\u6CD5\u3002\u4E86\u89E3\u66F4\u591A\u7528\u6CD5\u63A8\u8350\u67E5\u770B\u8FD9\u7BC7");
const _hoisted_278 = {
  href: "https://juejin.cn/post/6844904063729926152",
  title: "https://juejin.cn/post/6844904063729926152",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_279 = /* @__PURE__ */ createTextVNode("\u300A25\u4E2A\u4F60\u4E0D\u5F97\u4E0D\u77E5\u9053\u7684\u6570\u7EC4reduce\u9AD8\u7EA7\u7528\u6CD5\u300B");
function _sfc_render(_ctx, _cache) {
  const _component_ExternalLinkIcon = resolveComponent("ExternalLinkIcon");
  return openBlock(), createElementBlock(Fragment, null, [
    _hoisted_1,
    createBaseVNode("blockquote", null, [
      createBaseVNode("p", null, [
        createBaseVNode("a", _hoisted_89, [
          _hoisted_90,
          _hoisted_91,
          _hoisted_92,
          createVNode(_component_ExternalLinkIcon)
        ])
      ])
    ]),
    _hoisted_93,
    createBaseVNode("blockquote", null, [
      createBaseVNode("p", null, [
        _hoisted_98,
        createBaseVNode("a", _hoisted_99, [
          _hoisted_100,
          createVNode(_component_ExternalLinkIcon)
        ])
      ])
    ]),
    _hoisted_101,
    createBaseVNode("p", null, [
      _hoisted_276,
      _hoisted_277,
      createBaseVNode("a", _hoisted_278, [
        _hoisted_279,
        createVNode(_component_ExternalLinkIcon)
      ])
    ])
  ], 64);
}
var JavaScript______html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "JavaScript\u57FA\u7840(\u4E00).html.vue"]]);
export { JavaScript______html as default };
